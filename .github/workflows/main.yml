name: Build IPK with OpenWrt SDK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build IPK for ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x86_64
            sdk_url: https://downloads.openwrt.org/releases/23.05.3/targets/x86/64/openwrt-sdk-23.05.3-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz
          - arch: aarch64_generic
            sdk_url: https://downloads.openwrt.org/releases/23.05.3/targets/armsr/armv8/openwrt-sdk-23.05.3-armsr-armv8_gcc-12.3.0_musl.Linux-x86_64.tar.xz

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libncurses5-dev gawk git libssl-dev gettext zlib1g-dev swig unzip time rsync python3 python3-setuptools

      - name: Download and extract OpenWrt SDK
        run: |
          wget -q ${{ matrix.sdk_url }}
          tar xf *.tar.xz
          rm *.tar.xz
          mv openwrt-sdk-* openwrt-sdk

      - name: Update feeds
        working-directory: openwrt-sdk
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Copy package to SDK
        run: |
          mkdir -p openwrt-sdk/package/luci-app-3ginfo-lite
          cp -r luci-app-3ginfo-lite/* openwrt-sdk/package/luci-app-3ginfo-lite/

      - name: Configure SDK
        working-directory: openwrt-sdk
        run: |
          echo "CONFIG_PACKAGE_luci-app-3ginfo-mod=m" >> .config
          make defconfig

      - name: Build package
        working-directory: openwrt-sdk
        run: |
          make package/luci-app-3ginfo-lite/compile V=s -j$(nproc)

      - name: Collect IPK files
        run: |
          mkdir -p artifacts
          find openwrt-sdk/bin/packages -name "*.ipk" -exec cp {} artifacts/ \;

      - name: List built packages
        run: |
          echo "Built packages:"
          ls -lh artifacts/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: luci-app-3ginfo-lite-${{ matrix.arch }}
          path: artifacts/*.ipk
          if-no-files-found: error

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-artifacts

      - name: Prepare release files
        run: |
          mkdir -p release
          find release-artifacts -name "*.ipk" -exec cp {} release/ \;
          ls -lh release/

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

      - name: Get short SHA
        id: sha
        run: echo "sha=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.date.outputs.date }}-${{ steps.sha.outputs.sha }}
          name: Release ${{ steps.date.outputs.date }}
          files: release/*.ipk
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            ## luci-app-3ginfo-lite Build
            
            **Build Date:** ${{ steps.date.outputs.date }}
            **Commit:** ${{ steps.sha.outputs.sha }}
            
            ### Supported Architectures:
            - x86_64
            - aarch64_generic (ARM 64-bit)
            
            ### Installation:
            ```bash
            opkg install luci-app-3ginfo-mod_*.ipk
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
